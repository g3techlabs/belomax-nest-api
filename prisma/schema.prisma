// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ProcessType {
  CONTRACHEQUE_PENSIONISTAS
  TERMOS_EXTRATO
}

enum ProcessStatus {
  PENDING
  FINISHED
  CANCELLED
  FAILED
}

enum StatementBank {
  BB
  BRADESCO
  CAIXA
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  role      String    @default("USER")
  processes Process[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("user")
}

model Customer {
  id            String    @id @default(uuid())
  name          String
  cpf           String    @unique
  rg            String    @unique
  address       String
  citizenship   String
  maritalStatus String
  occupation    String?
  email         String?
  phone         String?
  processes     Process[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("customer")
}

model Process {
  id          String        @id @default(uuid())
  description String
  status      ProcessStatus
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  customer    Customer      @relation(fields: [customerId], references: [id])
  customerId  String
  documents   Document[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  contracheque_pensionista ContrachequePensionista?

  @@map("process")
}

model Document {
  id        String   @id @default(uuid())
  name      String
  url       String
  processId String
  process   Process  @relation(fields: [processId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("document")
}

model ContrachequePensionista {
  id        String  @id @default(uuid())
  processId String  @unique
  process   Process @relation(fields: [processId], references: [id])

  registration String
  bond         String
  cpf          String
  number       String
  startMonth   String
  startYear    String
  endMonth     String
  endYear      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contracheque_pensionista")
}
